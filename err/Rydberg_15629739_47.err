ERROR: LoadError: TaskFailedException

    nested task error: MethodError: objects of type Val{2} are not callable
    The object of type `Val{2}` exists, but no method is defined for this combination of argument types when trying to treat it as a callable object.
    Stacktrace:
      [1] literal_pow
        @ ./intfuncs.jl:358 [inlined]
      [2] _broadcast_getindex_evalf
        @ ./broadcast.jl:673 [inlined]
      [3] _broadcast_getindex
        @ ./broadcast.jl:646 [inlined]
      [4] _getindex
        @ ./broadcast.jl:670 [inlined]
      [5] _getindex
        @ ./broadcast.jl:669 [inlined]
      [6] _broadcast_getindex
        @ ./broadcast.jl:645 [inlined]
      [7] getindex
        @ ./broadcast.jl:605 [inlined]
      [8] copy
        @ ./broadcast.jl:906 [inlined]
      [9] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(*), Tuple{Int64, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.literal_pow), Tuple{Base.RefValue{Val{2}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(cot), Tuple{Vector{Float64}}}, Base.RefValue{Val{2}}}}}})
        @ Base.Broadcast ./broadcast.jl:867
     [10] diffusion!(du::Vector{Float64}, u::Vector{Float64}, p::Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, t::Float64)
        @ Main ~/Rydberg_facilitation/main.jl:63
     [11] perform_step!(integrator::StochasticDiffEq.SDEIntegrator{SRIW1, true, Vector{Float64}, Float64, Float64, Float64, Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, Float64, Float64, Float64, NoiseProcess{Float64, 2, Float64, Vector{Float64}, Vector{Float64}, Vector{Vector{Float64}}, typeof(DiffEqNoiseProcess.INPLACE_WHITE_NOISE_DIST), typeof(DiffEqNoiseProcess.INPLACE_WHITE_NOISE_BRIDGE), Nothing, true, ResettableStacks.ResettableStack{Tuple{Float64, Vector{Float64}, Vector{Float64}}, true}, ResettableStacks.ResettableStack{Tuple{Float64, Vector{Float64}, Vector{Float64}}, true}, RSWM{Float64}, Nothing, RandomNumbers.Xorshifts.Xoroshiro128Plus}, Nothing, Vector{Float64}, RODESolution{Float64, 2, Vector{Vector{Float64}}, Nothing, Nothing, Vector{Float64}, NoiseProcess{Float64, 2, Float64, Vector{Float64}, Vector{Float64}, Vector{Vector{Float64}}, typeof(DiffEqNoiseProcess.INPLACE_WHITE_NOISE_DIST), typeof(DiffEqNoiseProcess.INPLACE_WHITE_NOISE_BRIDGE), Nothing, true, ResettableStacks.ResettableStack{Tuple{Float64, Vector{Float64}, Vector{Float64}}, true}, ResettableStacks.ResettableStack{Tuple{Float64, Vector{Float64}, Vector{Float64}}, true}, RSWM{Float64}, Nothing, RandomNumbers.Xorshifts.Xoroshiro128Plus}, SDEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, Nothing, SDEFunction{true, SciMLBase.FullSpecialize, typeof(drift!), typeof(diffusion!), UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing}, typeof(diffusion!), @Kwargs{}, Nothing}, SRIW1, StochasticDiffEq.LinearInterpolationData{Vector{Vector{Float64}}, Vector{Float64}}, SciMLBase.DEStats, Nothing, Nothing}, StochasticDiffEq.SRIW1Cache{Vector{Float64}, Vector{Float64}, Vector{Float64}}, SDEFunction{true, SciMLBase.FullSpecialize, typeof(drift!), typeof(diffusion!), UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing}, typeof(diffusion!), Nothing, StochasticDiffEq.SDEOptions{Float64, Float64, PIController{Float64}, typeof(DiffEqBase.ODE_DEFAULT_NORM), Nothing, CallbackSet{Tuple{}, Tuple{}}, typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), DataStructures.BinaryHeap{Float64, DataStructures.FasterForward}, DataStructures.BinaryHeap{Float64, DataStructures.FasterForward}, Nothing, Nothing, Float64, Float64, Float64, Float64, Tuple{}, LinRange{Float64, Int64}, Tuple{}}, Nothing, Float64, Nothing, Nothing, StochasticDiffEq.SDEDefaultInit}, cache::StochasticDiffEq.SRIW1Cache{Vector{Float64}, Vector{Float64}, Vector{Float64}})
        @ StochasticDiffEq ~/.julia/packages/StochasticDiffEq/OmgKe/src/perform_step/sri.jl:183
     [12] solve!(integrator::StochasticDiffEq.SDEIntegrator{SRIW1, true, Vector{Float64}, Float64, Float64, Float64, Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, Float64, Float64, Float64, NoiseProcess{Float64, 2, Float64, Vector{Float64}, Vector{Float64}, Vector{Vector{Float64}}, typeof(DiffEqNoiseProcess.INPLACE_WHITE_NOISE_DIST), typeof(DiffEqNoiseProcess.INPLACE_WHITE_NOISE_BRIDGE), Nothing, true, ResettableStacks.ResettableStack{Tuple{Float64, Vector{Float64}, Vector{Float64}}, true}, ResettableStacks.ResettableStack{Tuple{Float64, Vector{Float64}, Vector{Float64}}, true}, RSWM{Float64}, Nothing, RandomNumbers.Xorshifts.Xoroshiro128Plus}, Nothing, Vector{Float64}, RODESolution{Float64, 2, Vector{Vector{Float64}}, Nothing, Nothing, Vector{Float64}, NoiseProcess{Float64, 2, Float64, Vector{Float64}, Vector{Float64}, Vector{Vector{Float64}}, typeof(DiffEqNoiseProcess.INPLACE_WHITE_NOISE_DIST), typeof(DiffEqNoiseProcess.INPLACE_WHITE_NOISE_BRIDGE), Nothing, true, ResettableStacks.ResettableStack{Tuple{Float64, Vector{Float64}, Vector{Float64}}, true}, ResettableStacks.ResettableStack{Tuple{Float64, Vector{Float64}, Vector{Float64}}, true}, RSWM{Float64}, Nothing, RandomNumbers.Xorshifts.Xoroshiro128Plus}, SDEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, Nothing, SDEFunction{true, SciMLBase.FullSpecialize, typeof(drift!), typeof(diffusion!), UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing}, typeof(diffusion!), @Kwargs{}, Nothing}, SRIW1, StochasticDiffEq.LinearInterpolationData{Vector{Vector{Float64}}, Vector{Float64}}, SciMLBase.DEStats, Nothing, Nothing}, StochasticDiffEq.SRIW1Cache{Vector{Float64}, Vector{Float64}, Vector{Float64}}, SDEFunction{true, SciMLBase.FullSpecialize, typeof(drift!), typeof(diffusion!), UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing}, typeof(diffusion!), Nothing, StochasticDiffEq.SDEOptions{Float64, Float64, PIController{Float64}, typeof(DiffEqBase.ODE_DEFAULT_NORM), Nothing, CallbackSet{Tuple{}, Tuple{}}, typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), DataStructures.BinaryHeap{Float64, DataStructures.FasterForward}, DataStructures.BinaryHeap{Float64, DataStructures.FasterForward}, Nothing, Nothing, Float64, Float64, Float64, Float64, Tuple{}, LinRange{Float64, Int64}, Tuple{}}, Nothing, Float64, Nothing, Nothing, StochasticDiffEq.SDEDefaultInit})
        @ StochasticDiffEq ~/.julia/packages/StochasticDiffEq/OmgKe/src/solve.jl:694
     [13] __solve(prob::SDEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, Nothing, SDEFunction{true, SciMLBase.FullSpecialize, typeof(drift!), typeof(diffusion!), UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing}, typeof(diffusion!), @Kwargs{}, Nothing}, alg::SRIW1, timeseries::Vector{Any}, ts::Vector{Any}, ks::Nothing, recompile::Type{Val{true}}; kwargs::@Kwargs{saveat::LinRange{Float64, Int64}, maxiters::Float64, abstol::Float64, reltol::Float64, dtmax::Float64})
        @ StochasticDiffEq ~/.julia/packages/StochasticDiffEq/OmgKe/src/solve.jl:7
     [14] __solve (repeats 5 times)
        @ ~/.julia/packages/StochasticDiffEq/OmgKe/src/solve.jl:1 [inlined]
     [15] solve_call(_prob::SDEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, Nothing, SDEFunction{true, SciMLBase.FullSpecialize, typeof(drift!), typeof(diffusion!), UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing}, typeof(diffusion!), @Kwargs{}, Nothing}, args::SRIW1; merge_callbacks::Bool, kwargshandle::Nothing, kwargs::@Kwargs{saveat::LinRange{Float64, Int64}, maxiters::Float64, abstol::Float64, reltol::Float64, dtmax::Float64})
        @ DiffEqBase ~/.julia/packages/DiffEqBase/DG18l/src/solve.jl:635
     [16] solve_up(prob::SDEProblem{Vector{Float64}, Tuple{Int64, Int64}, true, Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, Nothing, SDEFunction{true, SciMLBase.FullSpecialize, typeof(drift!), typeof(diffusion!), UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing}, typeof(diffusion!), @Kwargs{}, Nothing}, sensealg::Nothing, u0::Vector{Float64}, p::Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, args::SRIW1; kwargs::@Kwargs{saveat::LinRange{Float64, Int64}, maxiters::Float64, abstol::Float64, reltol::Float64, dtmax::Float64})
        @ DiffEqBase ~/.julia/packages/DiffEqBase/DG18l/src/solve.jl:1142
     [17] solve_up
        @ ~/.julia/packages/DiffEqBase/DG18l/src/solve.jl:1120 [inlined]
     [18] solve(prob::SDEProblem{Vector{Float64}, Tuple{Int64, Int64}, true, Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, Nothing, SDEFunction{true, SciMLBase.FullSpecialize, typeof(drift!), typeof(diffusion!), UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing}, typeof(diffusion!), @Kwargs{}, Nothing}, args::SRIW1; sensealg::Nothing, u0::Nothing, p::Nothing, wrap::Val{true}, kwargs::@Kwargs{saveat::LinRange{Float64, Int64}, maxiters::Float64, abstol::Float64, reltol::Float64, dtmax::Float64})
        @ DiffEqBase ~/.julia/packages/DiffEqBase/DG18l/src/solve.jl:1057
     [19] solve
        @ ~/.julia/packages/DiffEqBase/DG18l/src/solve.jl:1047 [inlined]
     [20] #batch_func#681
        @ ~/.julia/packages/SciMLBase/elLNZ/src/ensemble/basic_ensemble_solve.jl:193 [inlined]
     [21] batch_func
        @ ~/.julia/packages/SciMLBase/elLNZ/src/ensemble/basic_ensemble_solve.jl:180 [inlined]
     [22] #694
        @ ~/.julia/packages/SciMLBase/elLNZ/src/ensemble/basic_ensemble_solve.jl:271 [inlined]
     [23] macro expansion
        @ ~/.julia/packages/SciMLBase/elLNZ/src/ensemble/basic_ensemble_solve.jl:281 [inlined]
     [24] (::SciMLBase.var"#1370#threadsfor_fun#698"{SciMLBase.var"#1370#threadsfor_fun#697#699"{SciMLBase.var"#694#696"{@Kwargs{saveat::LinRange{Float64, Int64}, maxiters::Float64, abstol::Float64, reltol::Float64, dtmax::Float64}, EnsembleProblem{SDEProblem{Vector{Float64}, Tuple{Int64, Int64}, true, Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, Nothing, SDEFunction{true, SciMLBase.FullSpecialize, typeof(drift!), typeof(diffusion!), UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing}, typeof(diffusion!), @Kwargs{}, Nothing}, var"#9#10"{Vector{Float64}}, typeof(SciMLBase.DEFAULT_OUTPUT_FUNC), typeof(SciMLBase.DEFAULT_REDUCTION), Nothing}, SRIW1}, Tuple{UnitRange{Int64}}, Vector{Any}, UnitRange{Int64}}})(tid::Int64; onethread::Bool)
        @ SciMLBase ./threadingconstructs.jl:253
     [25] #1370#threadsfor_fun
        @ ./threadingconstructs.jl:220 [inlined]
     [26] (::Base.Threads.var"#1#2"{SciMLBase.var"#1370#threadsfor_fun#698"{SciMLBase.var"#1370#threadsfor_fun#697#699"{SciMLBase.var"#694#696"{@Kwargs{saveat::LinRange{Float64, Int64}, maxiters::Float64, abstol::Float64, reltol::Float64, dtmax::Float64}, EnsembleProblem{SDEProblem{Vector{Float64}, Tuple{Int64, Int64}, true, Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, Nothing, SDEFunction{true, SciMLBase.FullSpecialize, typeof(drift!), typeof(diffusion!), UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing}, typeof(diffusion!), @Kwargs{}, Nothing}, var"#9#10"{Vector{Float64}}, typeof(SciMLBase.DEFAULT_OUTPUT_FUNC), typeof(SciMLBase.DEFAULT_REDUCTION), Nothing}, SRIW1}, Tuple{UnitRange{Int64}}, Vector{Any}, UnitRange{Int64}}}, Int64})()
        @ Base.Threads ./threadingconstructs.jl:154
Stacktrace:
  [1] threading_run(fun::SciMLBase.var"#1370#threadsfor_fun#698"{SciMLBase.var"#1370#threadsfor_fun#697#699"{SciMLBase.var"#694#696"{@Kwargs{saveat::LinRange{Float64, Int64}, maxiters::Float64, abstol::Float64, reltol::Float64, dtmax::Float64}, EnsembleProblem{SDEProblem{Vector{Float64}, Tuple{Int64, Int64}, true, Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, Nothing, SDEFunction{true, SciMLBase.FullSpecialize, typeof(drift!), typeof(diffusion!), UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing}, typeof(diffusion!), @Kwargs{}, Nothing}, var"#9#10"{Vector{Float64}}, typeof(SciMLBase.DEFAULT_OUTPUT_FUNC), typeof(SciMLBase.DEFAULT_REDUCTION), Nothing}, SRIW1}, Tuple{UnitRange{Int64}}, Vector{Any}, UnitRange{Int64}}}, static::Bool)
    @ Base.Threads ./threadingconstructs.jl:173
  [2] macro expansion
    @ ./threadingconstructs.jl:190 [inlined]
  [3] tmap
    @ ~/.julia/packages/SciMLBase/elLNZ/src/ensemble/basic_ensemble_solve.jl:280 [inlined]
  [4] solve_batch(prob::EnsembleProblem{SDEProblem{Vector{Float64}, Tuple{Int64, Int64}, true, Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, Nothing, SDEFunction{true, SciMLBase.FullSpecialize, typeof(drift!), typeof(diffusion!), UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing}, typeof(diffusion!), @Kwargs{}, Nothing}, var"#9#10"{Vector{Float64}}, typeof(SciMLBase.DEFAULT_OUTPUT_FUNC), typeof(SciMLBase.DEFAULT_REDUCTION), Nothing}, alg::SRIW1, ensemblealg::EnsembleThreads, II::UnitRange{Int64}, pmap_batch_size::Int64; kwargs::@Kwargs{saveat::LinRange{Float64, Int64}, maxiters::Float64, abstol::Float64, reltol::Float64, dtmax::Float64})
    @ SciMLBase ~/.julia/packages/SciMLBase/elLNZ/src/ensemble/basic_ensemble_solve.jl:270
  [5] solve_batch
    @ ~/.julia/packages/SciMLBase/elLNZ/src/ensemble/basic_ensemble_solve.jl:257 [inlined]
  [6] macro expansion
    @ ./timing.jl:421 [inlined]
  [7] (::SciMLBase.var"#679#680"{Int64, Int64, Int64, @Kwargs{saveat::LinRange{Float64, Int64}, maxiters::Float64, abstol::Float64, reltol::Float64, dtmax::Float64}, EnsembleProblem{SDEProblem{Vector{Float64}, Tuple{Int64, Int64}, true, Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, Nothing, SDEFunction{true, SciMLBase.FullSpecialize, typeof(drift!), typeof(diffusion!), UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing}, typeof(diffusion!), @Kwargs{}, Nothing}, var"#9#10"{Vector{Float64}}, typeof(SciMLBase.DEFAULT_OUTPUT_FUNC), typeof(SciMLBase.DEFAULT_REDUCTION), Nothing}, SRIW1, EnsembleThreads})()
    @ SciMLBase ~/.julia/packages/SciMLBase/elLNZ/src/ensemble/basic_ensemble_solve.jl:146
  [8] with_logstate(f::SciMLBase.var"#679#680"{Int64, Int64, Int64, @Kwargs{saveat::LinRange{Float64, Int64}, maxiters::Float64, abstol::Float64, reltol::Float64, dtmax::Float64}, EnsembleProblem{SDEProblem{Vector{Float64}, Tuple{Int64, Int64}, true, Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, Nothing, SDEFunction{true, SciMLBase.FullSpecialize, typeof(drift!), typeof(diffusion!), UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing}, typeof(diffusion!), @Kwargs{}, Nothing}, var"#9#10"{Vector{Float64}}, typeof(SciMLBase.DEFAULT_OUTPUT_FUNC), typeof(SciMLBase.DEFAULT_REDUCTION), Nothing}, SRIW1, EnsembleThreads}, logstate::Base.CoreLogging.LogState)
    @ Base.CoreLogging ./logging/logging.jl:522
  [9] with_logger
    @ ./logging/logging.jl:632 [inlined]
 [10] __solve(prob::EnsembleProblem{SDEProblem{Vector{Float64}, Tuple{Int64, Int64}, true, Tuple{Float64, Int64, Int64, Int64, Float64, Int64, Vector{Vector{Int64}}, Vector{Float64}}, Nothing, SDEFunction{true, SciMLBase.FullSpecialize, typeof(drift!), typeof(diffusion!), UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing}, typeof(diffusion!), @Kwargs{}, Nothing}, var"#9#10"{Vector{Float64}}, typeof(SciMLBase.DEFAULT_OUTPUT_FUNC), typeof(SciMLBase.DEFAULT_REDUCTION), Nothing}, alg::SRIW1, ensemblealg::EnsembleThreads; trajectories::Int64, batch_size::Int64, progress_aggregate::Bool, pmap_batch_size::Int64, kwargs::@Kwargs{saveat::LinRange{Float64, Int64}, maxiters::Float64, abstol::Float64, reltol::Float64, dtmax::Float64})
    @ SciMLBase ~/.julia/packages/SciMLBase/elLNZ/src/ensemble/basic_ensemble_solve.jl:130
 [11] __solve
    @ ~/.julia/packages/SciMLBase/elLNZ/src/ensemble/basic_ensemble_solve.jl:122 [inlined]
 [12] #__solve#676
    @ ~/.julia/packages/SciMLBase/elLNZ/src/ensemble/basic_ensemble_solve.jl:105 [inlined]
 [13] __solve
    @ ~/.julia/packages/SciMLBase/elLNZ/src/ensemble/basic_ensemble_solve.jl:95 [inlined]
 [14] #solve#46
    @ ~/.julia/packages/DiffEqBase/DG18l/src/solve.jl:1160 [inlined]
 [15] computeTWA(nAtoms::Int64, tf::Int64, nT::Int64, nTraj::Int64, Ω::Float64, Δ::Int64, V::Int64, Γ::Int64, γ::Float64)
    @ Main ~/Rydberg_facilitation/main.jl:86
 [16] top-level scope
    @ ~/Rydberg_facilitation/main.jl:144
in expression starting at /home/quw51vuk/Rydberg_facilitation/main.jl:128
